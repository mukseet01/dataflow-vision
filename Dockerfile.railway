
# Base image
FROM node:18-alpine as builder

# Set working directory
WORKDIR /app

# Install curl and healthcheck tools
RUN apk --no-cache add curl wget

# Copy package files
COPY package*.json ./

# Install dependencies with better error handling and logging
RUN npm ci --no-audit --no-fund || (echo "npm ci failed, retrying with npm install" && npm install)

# Copy project files
COPY . .

# Build the application with error reporting
RUN npm run build || (echo "Build failed with the following errors:" && cat /app/npm-debug.log* 2>/dev/null && exit 1)

# Production image
FROM node:18-alpine

WORKDIR /app

# Install needed tools
RUN apk --no-cache add curl wget

# Copy built assets from builder
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/package*.json ./

# Install production dependencies only
RUN npm ci --omit=dev --no-audit --no-fund || npm install --omit=dev

# Create a dedicated health check HTML file
RUN echo '<!DOCTYPE html><html><head><title>Health Check</title></head><body>OK</body></html>' > /app/dist/health.html

# Add healthcheck
HEALTHCHECK --interval=15s --timeout=5s --start-period=10s --retries=3 \
  CMD wget -q --spider http://localhost:3000/health.html || exit 1

# Install serve for running the built application
RUN npm install -g serve

# Expose port
EXPOSE 3000

# Start the application with serve instead of npm run start
CMD ["serve", "-s", "dist", "-l", "3000"]
